
package com.sonatype.ssc.integration.fortify.model.VulnerabilityDetail;

import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang3.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "source",
    "score",
    "vector"
})
public class MainSeverity {

    @JsonProperty("source")
    private String source;
    @JsonProperty("score")
    private Double score;
    @JsonProperty("vector")
    private String vector;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    @JsonProperty("source")
    public String getSource() {
        return source;
    }

    @JsonProperty("source")
    public void setSource(String source) {
        this.source = source;
    }

    public MainSeverity withSource(String source) {
        this.source = source;
        return this;
    }

    @JsonProperty("score")
    public Double getScore() {
        return score;
    }

    @JsonProperty("score")
    public void setScore(Double score) {
        this.score = score;
    }

    public MainSeverity withScore(Double score) {
        this.score = score;
        return this;
    }

    @JsonProperty("vector")
    public String getVector() {
        return vector;
    }

    @JsonProperty("vector")
    public void setVector(String vector) {
        this.vector = vector;
    }

    public MainSeverity withVector(String vector) {
        this.vector = vector;
        return this;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    public MainSeverity withAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
        return this;
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("source", source).append("score", score).append("vector", vector).append("additionalProperties", additionalProperties).toString();
    }

}
